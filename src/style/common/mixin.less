@import './var.less';
.init-reset() {
  html,
  body,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  div,
  dl,
  dt,
  dd,
  ul,
  ol,
  li,
  p,
  blockquote,
  pre,
  hr,
  figure,
  table,
  caption,
  th,
  td,
  form,
  fieldset,
  legend,
  input,
  button,
  textarea,
  menu {
    margin: 0;
    padding: 0;
  }
  header,
  footer,
  section,
  article,
  aside,
  nav,
  hgroup,
  address,
  figure,
  figcaption,
  menu,
  details {
    display: block;
  }
  table {
    border-collapse: collapse;
    border-spacing: 0;
  }
  caption,
  th {
    text-align: left;
    font-weight: normal;
  }
  html,
  body,
  fieldset,
  img,
  iframe,
  abbr {
    border: 0;
  }
  i,
  cite,
  em,
  var,
  address,
  dfn {
    font-style: normal;
  }
  img {
    vertical-align: top;
  }
  [hidefocus],
  summary {
    outline: 0;
  }
  li {
    list-style: none;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  small {
    font-size: 100%;
  }
  sup,
  sub {
    font-size: 83%;
  }
  pre,
  code,
  kbd,
  samp {
    font-family: inherit;
  }
  q:before,
  q:after {
    content: none;
  }
  textarea {
    overflow: auto;
    resize: none;
  }
  label,
  summary {
    cursor: default;
  }
  a,
  button {
    cursor: pointer;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  em,
  strong,
  b {
    font-weight: bold;
  }
  del,
  ins,
  u,
  s,
  a,
  a:hover {
    text-decoration: none;
  }
  body,
  textarea,
  input,
  button,
  select,
  keygen,
  legend {
    outline: 0;
  }
  a,
  a:visited,
  a:hover,
  a:link,
  a:active {
    text-decoration: none;
  }
}

.init-grid(@count: 12, @padding: 15px, @width: 100%, @pre: @pre) {
    .column() {
        float: left;
        padding-left: @padding;
        padding-right: @padding;
        min-height: 1px;
        box-sizing: border-box;
    }
    
    .@{pre}-container {
        padding-left: @padding;
        padding-right: @padding;
        width: @width;
    }
    
    .@{pre}-row {
        margin-left: -@padding;
        margin-right: -@padding;
        *zoom: 1;
        &:before, &:after {
            content: " "; 
            display: table; 
            line-height: 0;
        }
        &:after {
            clear: both;
        }
    }
    
    // 递归生成栅格
    .build-column(@i) when (@i > 0) {
        .build-column((@i - 1));
        
        .@{pre}-col-@{i} {
            width: percentage(@i / @count);
            .column();
        }
        .@{pre}-col-offset-@{i} {
            margin-left: percentage(@i / @count);
        }
    }

    .build-column(@count);
}

.init-common() {
  .fl {
    float: left;
  }
  .fr {
    float: right;
  }
  .bfc {
    overflow: hidden;
  }
  .tac {
    text-align: center;
  }
  .tac {
    text-align: center;
  }
  .tar {
    text-align: right;
  }
  .tal {
    text-align: left;
  }
  .clearfix {
    *zoom: 1;
    &:before,
    &:after {
      content: " ";
      display: table;
      line-height: 0;
    }
    &:after {
      clear: both;
    }
  }
}

.init-border-box() {
    html {
      box-sizing: border-box;
    }
    *, *:before, *:after {
      box-sizing: inherit;
    }
}
.w() {
  width: 1200px;
  margin: 0 auto;
}

.nowrap-muti(@line) {
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: @line;
}

.nowrap() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.shadow(@color: #d0d0d0) {
  box-shadow: 0px 0px 13px 0px @color;
}
